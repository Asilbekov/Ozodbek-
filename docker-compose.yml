version: '3.8'

services:
  database:
    image: postgres:15-alpine
    container_name: aetherium_database
    environment:
      POSTGRES_DB: aetherium
      POSTGRES_USER: aetherium_user
      POSTGRES_PASSWORD: ${DB_PASSWORD:-aetherium_secure_pass_2024}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U aetherium_user -d aetherium"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend-api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: aetherium_backend
    environment:
      - DATABASE_URL=postgresql://aetherium_user:${DB_PASSWORD:-aetherium_secure_pass_2024}@database:5432/aetherium
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - CLICK_SECRET_KEY=${CLICK_SECRET_KEY}
      - CLICK_SERVICE_ID=${CLICK_SERVICE_ID}
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-aetherium_jwt_secret_2024}
    ports:
      - "8000:8000"
    depends_on:
      database:
        condition: service_healthy
    volumes:
      - ./backend/logs:/app/logs
      - ./backend/uploads:/app/uploads
    restart: unless-stopped

  web-frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: aetherium_frontend
    ports:
      - "12000:80"
    depends_on:
      - backend-api
    restart: unless-stopped

  modem-manager:
    build:
      context: ./modem-manager
      dockerfile: Dockerfile
    container_name: aetherium_modem_manager
    privileged: true
    devices:
      - /dev:/dev
    volumes:
      - /dev:/dev
      - /sys:/sys
      - ./modem-manager/logs:/app/logs
    environment:
      - BACKEND_API_URL=http://backend-api:8000
      - GEMINI_API_KEY=${GEMINI_API_KEY}
    depends_on:
      - backend-api
    restart: unless-stopped

  telegram-bot-interface:
    build:
      context: ./telegram-bot
      dockerfile: Dockerfile
    container_name: aetherium_telegram_bot
    environment:
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - BACKEND_API_URL=http://backend-api:8000
    depends_on:
      - backend-api
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    container_name: aetherium_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/ssl:/etc/nginx/ssl
    depends_on:
      - web-frontend
      - backend-api
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  default:
    driver: bridge